const md5=require("md5"),fs=require("fs");var Module_MD5=require("../../../package.json").MD5,Module_Name=require("../../../package.json").name,Module_Files=[];class MD5{constructor(s,e=(()=>{})){if(this.GA=["modules/MMM-GoogleAssistant/node_helper.js","modules/MMM-GoogleAssistant/MMM-GoogleAssistant.js","modules/MMM-GoogleAssistant/components/actionManager.js","modules/MMM-GoogleAssistant/components/assistant.js","modules/MMM-GoogleAssistant/components/response.js","modules/MMM-GoogleAssistant/components/screenParser.js","modules/MMM-GoogleAssistant/components/sound.js"],this.A2D=["modules/MMM-Assistant2Display/node_helper.js","modules/MMM-Assistant2Display/MMM-Assistant2Display.js","modules/MMM-Assistant2Display/components/display.js","modules/MMM-Assistant2Display/components/spotify.js","modules/MMM-Assistant2Display/components/youtube.js"],this.config=s,this.default={debug:!1},this.cb=e,this.config=Object.assign(this.default,this.config),"MMM-GoogleAssistant"==Module_Name)Module_Files=this.GA;else{if("MMM-Assistant2Display"!=Module_Name)return console.log("[MD5] Really MD5 needed ?"),process.abort();Module_Files=this.A2D}this.start()}async start(){if(this.config.dev&&this.config.debug)return console.log("[MD5] Bypassed..."),void this.make();if(!Module_MD5)return console.log("[MD5] No Module MD5 found!"),process.abort();if(Module_Files&&Object.keys(Module_Files).length>0){var s=[];for(let[e,o]of Object.entries(Module_Files))s[e]=await this.get_MD5(o);return md5(s.toString().replace(",",""))!=Module_MD5?(console.error("[MD5] "+Module_Name+" sources edited !"),console.error("[MD5] You don't have permission to do this !"),console.error("[MD5] Exiting MagicMirror..."),process.abort()):this.cb()}return console.log("[MD5] No files to scan!"),process.abort()}async make(){var s=[];if(Module_Files){for(let[e,o]of Object.entries(Module_Files))s[e]=await this.get_MD5(o);var e=md5(s.toString().replace(",",""));console.log("[MD5] "+Module_Name+" MD5 Value:",e)}else console.log("[MD5] Wow ! there is no files to scan!");this.cb()}get_MD5(s){return new Promise(e=>{fs.readFile(s,(s,o)=>{if(s)return console.log("[MD5] ERROR",s),process.abort();var t=md5(o);e(t)})})}}module.exports=MD5;
